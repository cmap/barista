doctype html
html
  head
    link(href='outline.css', rel='stylesheet', type='text/css')
    |   
    script(src='outline.js')
    |   
    meta(name='viewport', content='width=device-width', charset='utf-8')
    |   
    title barista
    |   
    link(rel='stylesheet', href='http://getbootstrap.com/2.3.2/assets/css/bootstrap.css')
    |   
    link(rel='stylesheet', href='http://getbootstrap.com/2.3.2/assets/css/bootstrap-responsive.css')
    |   
    link(rel='stylesheet', href='http://getbootstrap.com/2.3.2/assets/css/docs.css')
    |   
    style.
      body > .navbar .brand {
      float:left;
      text-shadow: rgba(255, 255, 255, 0.0980392) 0px 1px 0px, rgba(255, 255, 255, 0.4) 0px 0px 30px;
      color: white;
      margin-left:0px;
      font-weight:normal;
      }
      .bs-docs-sidenav.affix {
      box-shadow: 0 0 20px 1px rgba(0, 0, 0, 0.5);
      z-index: 10;
      }
      .bs-docs-sidenav i{
      width: 8px;
      height: 8px;
      padding: 0px;
      margin: 0px;
      display: inline-block;
      margin-right:0.5em;
      }
      .bs-docs-sidenav > li > a {
      word-wrap: break-word;
      }
      .bs-docs-sidenav > li:first-child > a {
      border-top-right-radius: 6px;
      border-top-left-radius: 6px;
      }
      code[class*="language-"],pre[class*="language-"]{color:black;text-shadow:0 1px white;font-family:Consolas,Monaco,'Andale Mono',monospace;direction:ltr;text-align:left;white-space:pre;word-spacing:normal;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}pre[class*="language-"]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*="language-"],pre[class*="language-"]{background:#f5f2f0}:not(pre)>code[class*="language-"]{padding:.1em;border-radius:.3em}.token.comment,.token.prolog,.token.doctype,.token.cdata{color:slategray}.token.punctuation{color:#999}.namespace{opacity:.7}.token.property,.token.tag,.token.boolean,.token.number{color:#905}.token.selector,.token.attr-name,.token.string{color:#690}.token.operator,.token.entity,.token.url,.language-css .token.string,.style .token.string{color:#a67f59;background:hsla(0,0%,100%,.5)}.token.atrule,.token.attr-value,.token.keyword{color:#07a}.token.regex,.token.important{color:#e90}.token.important{font-weight:bold}.token.entity{cursor:help}
      div.description {margin: 14px 0; padding-top: 14px; border-bottom:1px solid #eee; }
      .tags {}
      .ctx-type {
      display:inline-block;
      margin-right:0.5em;
      //- float:right;margin-top:8px
      }
      footer iframe{vertical-align:middle;}
  body(onload='outlineInit()', data-spy='scroll', data-target='.scrollspy')
    .navbar.navbar-inverse.navbar-fixed-top
      .navbar-inner
        .container
          a.brand Doxx
          |         
          .nav-collapse.collapse
            ul.nav.pull-right.sponsored
    |   
    header#overview.jumbotron.subhead
      .container
        h1 barista
        |       
        p.lead
    |   
    .container
      .row
        .span3.bs-docs-sidebar
          ul#sidebar.nav.nav-list.bs-docs-sidenav.affix-top.outline
            li.active
              a(href='index.html') Main
            |           
            li
              a(href='afterword.js.html') afterword.js
            |           
            li
              a(href='barista.js.html') barista.js
            |           
            li
              a(href='barista.main.js.html') barista.main.js
            |           
            li
              a(href='barista.main.min.js.html') barista.main.min.js
            |           
            li.navbar.nav-list(style='cursor: pointer;')
              | Collections
              ul(style='display: none')
                li
                  a(href='collections/AnalysisHistoryCollection.js.html') AnalysisHistoryCollection.js
                |               
                li
                  a(href='collections/CellCollection.js.html') CellCollection.js
                |               
                li
                  a(href='collections/GenericJSONCollection.js.html') GenericJSONCollection.js
                |               
                li
                  a(href='collections/PertCollection.js.html') PertCollection.js
                |               
                li
                  a(href='collections/SignatureCollection.js.html') SignatureCollection.js
                |               
                li
                  a(href='collections/SummlyResultCollection.js.html') SummlyResultCollection.js
            |           
            li.navbar.nav-list(style='cursor: pointer;')
              | Datasets
              ul(style='display: none')
                li
                  a(href='datasets/CellHistologyDataset.js.html') CellHistologyDataset.js
                |               
                li
                  a(href='datasets/CellIDDataset.js.html') CellIDDataset.js
                |               
                li
                  a(href='datasets/CellLineageDataset.js.html') CellLineageDataset.js
                |               
                li
                  a(href='datasets/CellMutationDataset.js.html') CellMutationDataset.js
                |               
                li
                  a(href='datasets/CompoundPertINameDataset.js.html') CompoundPertINameDataset.js
                |               
                li
                  a(href='datasets/GeneticPertINameDataset.js.html') GeneticPertINameDataset.js
                |               
                li
                  a(href='datasets/JobIDDataset.js.html') JobIDDataset.js
                |               
                li
                  a(href='datasets/JobNameDataset.js.html') JobNameDataset.js
                |               
                li
                  a(href='datasets/JobStatusDataset.js.html') JobStatusDataset.js
                |               
                li
                  a(href='datasets/P100PertINameDataset.js.html') P100PertINameDataset.js
                |               
                li
                  a(href='datasets/PRISMPertINameDataset.js.html') PRISMPertINameDataset.js
                |               
                li
                  a(href='datasets/PertINameDataset.js.html') PertINameDataset.js
                |               
                li
                  a(href='datasets/ToolIDDataset.js.html') ToolIDDataset.js
                |               
                li
                  a(href='datasets/UserIDDataset.js.html') UserIDDataset.js
            |           
            li.navbar.nav-list(style='cursor: pointer;')
              | Models
              ul(style='display: none')
                li
                  a(href='models/AnalysisHistoryModel.js.html') AnalysisHistoryModel.js
                |               
                li
                  a(href='models/BarPlotModel.js.html') BarPlotModel.js
                |               
                li
                  a(href='models/CellCountModel.js.html') CellCountModel.js
                |               
                li
                  a(href='models/CellModel.js.html') CellModel.js
                |               
                li
                  a(href='models/CompoundDetailModel.js.html') CompoundDetailModel.js
                |               
                li
                  a(href='models/GeneDetailModel.js.html') GeneDetailModel.js
                |               
                li
                  a(href='models/GenericCountModel.js.html') GenericCountModel.js
                |               
                li
                  a(href='models/GenericMongoModel.js.html') GenericMongoModel.js
                |               
                li
                  a(href='models/HeatmapModel.js.html') HeatmapModel.js
                |               
                li
                  a(href='models/PertCellBreakdownModel.js.html') PertCellBreakdownModel.js
                |               
                li
                  a(href='models/PertCountModel.js.html') PertCountModel.js
                |               
                li
                  a(href='models/PertDetailModel.js.html') PertDetailModel.js
                |               
                li
                  a(href='models/PertModel.js.html') PertModel.js
                |               
                li
                  a(href='models/ScatterPlotModel.js.html') ScatterPlotModel.js
                |               
                li
                  a(href='models/SigCountModel.js.html') SigCountModel.js
                |               
                li
                  a(href='models/SignatureModel.js.html') SignatureModel.js
                |               
                li
                  a(href='models/SummlyResultModel.js.html') SummlyResultModel.js
                |               
                li
                  a(href='models/TickModel.js.html') TickModel.js
                |               
                li
                  a(href='models/sequenceModel.js.html') sequenceModel.js
            |           
            li
              a(href='preamble.js.html') preamble.js
            |           
            li
              a(href='tile.js.html') tile.js
            |           
            li.navbar.nav-list(style='cursor: pointer;')
              | Utils
              ul(style='display: none')
                li
                  a(href='utils/CMapTypeAlias.js.html') CMapTypeAlias.js
                |               
                li
                  a(href='utils/NumbersToSubscript.js.html') NumbersToSubscript.js
                |               
                li
                  a(href='utils/arrayAverage.js.html') arrayAverage.js
                |               
                li
                  a(href='utils/getEmSizeInPixels.js.html') getEmSizeInPixels.js
                |               
                li
                  a(href='utils/getQueryVariable.js.html') getQueryVariable.js
                |               
                li
                  a(href='utils/numberWithCommas.js.html') numberWithCommas.js
                |               
                li
                  a(href='utils/setAPIPrefilter.js.html') setAPIPrefilter.js
                |               
                li
                  a(href='utils/setAPIURL.js.html') setAPIURL.js
                |               
                li
                  a(href='utils/setUserKey.js.html') setUserKey.js
          |         
          .scrollspy
            ul.nav.nav-list.bs-docs-sidenav.affix-top
        |       
        .span9
          section#Main
            p
              img(src='http://coreyflynn.github.io/Bellhop/img/cmap_broad_logo_small.png', alt='barista.js')
            h1
              strong Barista.js
            |           
            h3 LINCS javascript components
            |           
            p
              | Barista provides a library of components for working with data provided by the LINCS/Connectivity Map group at the Broad Institute.  These components are centered around the core structures of Models, Collections, and Views set up in 
              a(href='http://backbonejs.org/', title='Backbone') Backbone.js
              | .  The models provide sensible data objects for commonly used data types within Connectivity Map data.  The Collections group those models into common sets of data types.  The Views handle the on-screen display of either Models or Collections.  These components do not depend on each other and are meant to be the building blocks of larger applications that consume Connectivity Map data.
            h2
              strong Installation
            |           
            p
              | All of barista&apos;s dependencies are included in the main barista css and javascript files which we provide via a CDN, so all you need is
            pre.
              
            p and
            pre.
              
            p in your HTML and you&apos;re all set.
            p
              | If you want to use only parts of the library or roll your own extensions to it, go right ahead!  Just download the code or fork it and go wild!  We welcome pull requests and feedback.
            h1
              strong Components
            |       
            p
              | Barista provides 
              a(href='#models') models
              | , 
              a(href='#collections') collections
              | , 
              a(href='#views') views
              | , and 
              a(href='#utils') utility functions
              |  out of the box.  These components can be extended using 
              a(href='http://backbonejs.org/#Model-extend', title='Extension') standard extension mechanisms
              |  in backbone.js and underscore.js.  All components are housed under a top-level object called 
              code Barista
              | .
            h2
              strong Models
            |       
            p
              | Models provide objects that encapsulate information about commonly used data types in Connectivity Map data.  Many models also abstract the logic required to retrieve that information via the Connectivity Map&apos;s data APIs. Check out an 
              a(href='http://cmap.github.io/barista/doc/models/CellCountModel.html', title='Example Model') example model
              |  to get a feel for what models provide.  You can find models under 
              code Barista.Models
              | .
            h2
              strong Collections
            |       
            p
              | Collections build on top of models.  A Collection represents a group of models that will be operated on as a whole. As an example, rather than handling a set of 
              a(href='http://cmap.github.io/barista/doc/models/PertModel.html', title='PertModel') PertModels
              |  indivudually it is convient to use a 
              a(href='http://cmap.github.io/barista/doc/collections/PertCollection.html', title='PertCollection') PertCollection
              | .  This allows you to interact with the models as a set instead of handling them one at a time. Certain views such as the 
              a(href='http://cmap.github.io/barista/doc/views/GridView.html', title='GridView') GridView
              |  are built on top of collections. You can find collections under 
              code Barista.Collections
              | .
            h2
              strong Views
            |       
            p
              | Views handle the display of data that is exposed in models and collections. A given model or collection could be used in multiple different views provided that the view is able to consume the data that it needs from the paired model or collection.  Views also handle much of the controller behavior in a typical MVC framework.  Think of the views as handling all rendering and UI responsibilities. If the User sees it, it is built through a view.  Views also transparently respond to changes in the underlying data model as it changes. You can find views under 
              code Barista.Views
            h3 Instantiating a Minimal View
            |       
            p
              | A minimal view can be instantiated using 
              a(href='http://cmap.github.io/barista/doc/views/BaristaBaseView.html') BaristaBaseView
              | .  This view serves as the basis for
              br
              | many more complicated views in barista and handles common tasks such as standard initialization, redraw, render, template compilation, and png export functions.
            pre.
              
            |     
            h3 Extending a Minimal View
            |     
            p
              a(href='http://cmap.github.io/barista/doc/views/BaristaBaseView.html') BaristaBaseView
              |  is not very exciting in of itself since it is meant to be a bare bones view.  To contruct a more interesting view, 
              a(href='http://cmap.github.io/barista/doc/views/BaristaBaseView.html') BaristaBaseView
              |  can be extended using the following
            pre.
              
            p
              | To see this in action, check out one of the views built on top of 
              a(href='http://cmap.github.io/barista/doc/views/BaristaBaseView.html') BaristaBaseView
              |  such as 
              a(href='http://cmap.github.io/barista/doc/views/ViolinPlotView.html') ViolinPlotView
            h2
              strong Utils
            p
              | There are a small set of utility functions that do not fit cleanly as a model, collection, or view.  Think of these as mechanisms through which we abstract away mundane processing of data.  For example, the function 
              a(href='http://cmap.github.io/barista/doc/utils/CMapTypeAlias.html', title='CMapPertTypeAlias') CMapPertTypeAlias
              |  returns an object of standard names and acronyms when given a Connectivity Map perturbagen type.  Utility functions are registered under the top-level 
              code Barista
              |  object.
            h1
              strong Developer Documentation
            p Want the nuts and bolts? dig in!
            p
              a(href='http://cmap.github.io/barista/doc') Developer Documentation &gt;
            h1
              strong Attribution
            p
              | barista is written and maintained by 
              a(href='https://github.com/coreyflynn') @coreyflynn
              |  and the 
              a(href='https://github.com/cmap') @cmap
              |  team
            p
              a(href='http://www.flickr.com/photos/47022937@N03/8107139495/in/photolist-dmpd8a-dmpoJE-dmpnjG-dmpmb1-dmpdsQ-dmpgNa-dmpiMQ-dmpkAC-dmpgty-dmpkmK-dmpg18-dmpmMG-dmphmv-dmph5k-dmpddy-dmpjCH-dmpe6x-dmpdF7-8WrvdG-9cZJgG-8tZWEP-aRKouX-8Ft19Q-9xA5r5-8qEsxq-94pTM7-9UeDnr-dY1qFR-arY4Td-esXQkc-9xWgCL-cjK6py-8Ekz9n-8gJxFo-a67vXm-agGJ62-e4H3Tf-e4BrVe-e4BrTH-e4BrSK-84vwCN-8TWGnZ-e2PF5t-a1Wc39-et1Nxh-esXH1c-et1EQo-esXB2v-esXsY8-esXDi4-esXuTV') Photo
              |  taken from Flickr,
              br
              | licensed under Creative Commons.
    footer.footer
      .container
        p
          | Documentation generated with 
          a(href='https://github.com/FGRibreau/doxx') Doxx 
          |  created by 
          a.twitter-follow-button(href='https://twitter.com/FGRibreau', data-show-count='false') Francois-Guillaume Ribreau 
        |     
        p
          | Doxx is sponsored by 
          a.bringr(href='http://bringr.net/?btt', title="Outil d'analyse des réseaux sociaux") Bringr 
          |  and 
          a.redsmin(href='https://redsmin.com/?btt', title='Full Redis GUI') Redsmin
        |     
        p Theme borrowed from Twitter Bootstrap
    script(src='http://platform.twitter.com/widgets.js')
    script(src='http://ajax.googleapis.com/ajax/libs/jquery/1.8/jquery.min.js')
    script(src='http://leaverou.github.com/prefixfree/prefixfree.js')
    script(src='http://getbootstrap.com/2.3.2/assets/js/bootstrap-transition.js')
    script(src='http://getbootstrap.com/2.3.2/assets/js/bootstrap-scrollspy.js')
    script(src='http://getbootstrap.com/2.3.2/assets/js/bootstrap-dropdown.js')
    script(src='http://getbootstrap.com/2.3.2/assets/js/bootstrap-collapse.js')
    script(src='http://getbootstrap.com/2.3.2/assets/js/bootstrap-affix.js')
    script.
      /**
      * Prism: Lightweight, robust, elegant syntax highlighting
      * MIT license http://www.opensource.org/licenses/mit-license.php/
      * @author Lea Verou http://lea.verou.me
      */(function(){var e=/\\blang(?:uage)?-(?!\*)(\w+)\b/i,t=self.Prism={util:{type:function(e){return Object.prototype.toString.call(e).match(/\[object (\w+)\]/)[1]},clone:function(e){var n=t.util.type(e);switch(n){case"Object":var r={};for(var i in e)e.hasOwnProperty(i)&&(r[i]=t.util.clone(e[i]));return r;case"Array":return e.slice()}return e}},languages:{extend:function(e,n){var r=t.util.clone(t.languages[e]);for(var i in n)r[i]=n[i];return r},insertBefore:function(e,n,r,i){i=i||t.languages;var s=i[e],o={};for(var u in s)if(s.hasOwnProperty(u)){if(u==n)for(var a in r)r.hasOwnProperty(a)&&(o[a]=r[a]);o[u]=s[u]}return i[e]=o},DFS:function(e,n){for(var r in e){n.call(e,r,e[r]);t.util.type(e)==="Object"&&t.languages.DFS(e[r],n)}}},highlightAll:function(e,n){var r=document.querySelectorAll('code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code');for(var i=0,s;s=r[i++];)t.highlightElement(s,e===!0,n)},highlightElement:function(r,i,s){var o,u,a=r;while(a&&!e.test(a.className))a=a.parentNode;if(a){o=(a.className.match(e)||[,""])[1];u=t.languages[o]}if(!u)return;r.className=r.className.replace(e,"").replace(/\s+/g," ")+" language-"+o;a=r.parentNode;/pre/i.test(a.nodeName)&&(a.className=a.className.replace(e,"").replace(/\s+/g," ")+" language-"+o);var f=r.textContent;if(!f)return;f=f.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\u00a0/g," ");var l={element:r,language:o,grammar:u,code:f};t.hooks.run("before-highlight",l);if(i&&self.Worker){var c=new Worker(t.filename);c.onmessage=function(e){l.highlightedCode=n.stringify(JSON.parse(e.data));l.element.innerHTML=l.highlightedCode;s&&s.call(l.element);t.hooks.run("after-highlight",l)};c.postMessage(JSON.stringify({language:l.language,code:l.code}))}else{l.highlightedCode=t.highlight(l.code,l.grammar);l.element.innerHTML=l.highlightedCode;s&&s.call(r);t.hooks.run("after-highlight",l)}},highlight:function(e,r){return n.stringify(t.tokenize(e,r))},tokenize:function(e,n){var r=t.Token,i=[e],s=n.rest;if(s){for(var o in s)n[o]=s[o];delete n.rest}e:for(var o in n){if(!n.hasOwnProperty(o)||!n[o])continue;var u=n[o],a=u.inside,f=!!u.lookbehind||0;u=u.pattern||u;for(var l=0;l<i.length;l++){var c=i[l];if(i.length>e.length)break e;if(c instanceof r)continue;u.lastIndex=0;var h=u.exec(c);if(h){f&&(f=h[1].length);var p=h.index-1+f,h=h[0].slice(f),d=h.length,v=p+d,m=c.slice(0,p+1),g=c.slice(v+1),y=[l,1];m&&y.push(m);var b=new r(o,a?t.tokenize(h,a):h);y.push(b);g&&y.push(g);Array.prototype.splice.apply(i,y)}}}return i},hooks:{all:{},add:function(e,n){var r=t.hooks.all;r[e]=r[e]||[];r[e].push(n)},run:function(e,n){var r=t.hooks.all[e];if(!r||!r.length)return;for(var i=0,s;s=r[i++];)s(n)}}},n=t.Token=function(e,t){this.type=e;this.content=t};n.stringify=function(e){if(typeof e=="string")return e;if(Object.prototype.toString.call(e)=="[object Array]"){for(var r=0;r<e.length;r++)e[r]=n.stringify(e[r]);return e.join("")}var i={type:e.type,content:n.stringify(e.content),tag:"span",classes:["token",e.type],attributes:{}};i.type=="comment"&&(i.attributes.spellcheck="true");t.hooks.run("wrap",i);var s="";for(var o in i.attributes)s+=o+'="'+(i.attributes[o]||"")+'"';return"<"+i.tag+' class="'+i.classes.join(" ")+'" '+s+">"+i.content+"</"+i.tag+">"};if(!self.document){self.addEventListener("message",function(e){var n=JSON.parse(e.data),r=n.language,i=n.code;self.postMessage(JSON.stringify(t.tokenize(i,t.languages[r])));self.close()},!1);return}var r=document.getElementsByTagName("script");r=r[r.length-1];if(r){t.filename=r.src;document.addEventListener&&!r.hasAttribute("data-manual")&&document.addEventListener("DOMContentLoaded",t.highlightAll)}})();;
      Prism.languages.markup={comment:/&lt;!--[\\w\W]*?--(&gt;|&gt;)/g,prolog:/&lt;\?.+?\?&gt;/,doctype:/&lt;!DOCTYPE.+?&gt;/,cdata:/&lt;!\[CDATA\[[\w\W]+?]]&gt;/i,tag:{pattern:/&lt;\/?[\w:-]+\s*(?:\s+[\w:-]+(?:=(?:("|')(\\?[\w\W])*?\1|\w+))?\s*)*\/?&gt;/gi,inside:{tag:{pattern:/^&lt;\/?[\w:-]+/i,inside:{punctuation:/^&lt;\/?/,namespace:/^[\w-]+?:/}},"attr-value":{pattern:/=(?:('|")[\w\W]*?(\1)|[^\s>]+)/gi,inside:{punctuation:/=|&gt;|"/g}},punctuation:/\/?&gt;/g,"attr-name":{pattern:/[\w:-]+/g,inside:{namespace:/^[\w-]+?:/}}}},entity:/&amp;#?[\da-z]{1,8};/gi};Prism.hooks.add("wrap",function(e){e.type==="entity"&&(e.attributes.title=e.content.replace(/&amp;/,"&"))});;
      Prism.languages.css={comment:/\\/\*[\w\W]*?\*\//g,atrule:/@[\w-]+?(\s+[^;{]+)?(?=\s*{|\s*;)/gi,url:/url\((["']?).*?\1\)/gi,selector:/[^\{\}\s][^\{\}]*(?=\s*\{)/g,property:/(\b|\B)[a-z-]+(?=\s*:)/ig,string:/("|')(\\?.)*?\1/g,important:/\B!important\b/gi,ignore:/&(lt|gt|amp);/gi,punctuation:/[\{\};:]/g};Prism.languages.markup&&Prism.languages.insertBefore("markup","tag",{style:{pattern:/(&lt;|<)style[\w\W]*?(>|&gt;)[\w\W]*?(&lt;|<)\/style(>|&gt;)/ig,inside:{tag:{pattern:/(&lt;|<)style[\w\W]*?(>|&gt;)|(&lt;|<)\/style(>|&gt;)/ig,inside:Prism.languages.markup.tag.inside},rest:Prism.languages.css}}});;
      Prism.languages.clike={comment:{pattern:/(^|[^\\\])(\/\*[\w\W]*?\*\/|\/\/.*?(\r?\n|$))/g,lookbehind:!0},string:/("|')(\\?.)*?\1/g,keyword:/\b(if|else|while|do|for|return|in|instanceof|function|new|try|catch|finally|null|break|continue)\b/g,"boolean":/\b(true|false)\b/g,number:/\b-?(0x)?\d*\.?[\da-f]+\b/g,operator:/[-+]{1,2}|!|=?&lt;|=?&gt;|={1,2}|(&amp;){1,2}|\|?\||\?|\*|\//g,ignore:/&(lt|gt|amp);/gi,punctuation:/[{}[\];(),.:]/g};;
      Prism.languages.javascript=Prism.languages.extend("clike",{keyword:/\\b(var|let|if|else|while|do|for|return|in|instanceof|function|new|with|typeof|try|catch|finally|null|break|continue)\b/g,number:/\b(-?(0x)?\d*\.?[\da-f]+|NaN|-?Infinity)\b/g});Prism.languages.insertBefore("javascript","keyword",{regex:{pattern:/(^|[^/])\/(?!\/)(\[.+?]|\\.|[^/\r\n])+\/[gim]{0,3}(?=\s*($|[\r\n,.;})]))/g,lookbehind:!0}});Prism.languages.markup&&Prism.languages.insertBefore("markup","tag",{script:{pattern:/(&lt;|<)script[\w\W]*?(>|&gt;)[\w\W]*?(&lt;|<)\/script(>|&gt;)/ig,inside:{tag:{pattern:/(&lt;|<)script[\w\W]*?(>|&gt;)|(&lt;|<)\/script(>|&gt;)/ig,inside:Prism.languages.markup.tag.inside},rest:Prism.languages.javascript}}});;
    // App js
    script.
      $(function(){
      var $window = $(window);
      $('.scrollspy .nav').affix({
      offset: {
      top: function () { return $window.width() <= 980 ? 480 : 400 }
      , bottom: 50
      }
      });
      })
